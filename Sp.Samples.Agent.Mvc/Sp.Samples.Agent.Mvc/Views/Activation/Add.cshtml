@model Sp.Samples.Agent.Mvc.Models.ActivationModel
@{
    ViewBag.Title = "Activate a license";
}
<script src="@Url.Content( "~/Scripts/jquery.validate.min.js" )" type="text/javascript"></script>
<script src="@Url.Content( "~/Scripts/jquery.validate.unobtrusive.min.js" )" type="text/javascript"></script>
<h2>Activate a license</h2>
@using ( Html.BeginForm() )
{
    @Html.ValidationSummary( true )
	@Html.AntiForgeryToken()
	<fieldset>
        <div class="editor-label">
            @Html.LabelFor( model => model.ActivationKey )
        </div>
		<div class="editor-field">
			@Html.TextBoxFor( model => model.ActivationKey, new { size = 40, maxLength = Sp.Samples.Agent.Mvc.Models.ActivationModel.ActivationKeyRequiredLength } )
			@Html.ValidationMessageFor( model => model.ActivationKey )
		</div>
		<div class="hidden">
			@*NB - use an HTML input field and not the MVC Html.Hidden helper so that the server can change the value of PostToken property on re-rendering this View *@
			@* See also http://stackoverflow.com/questions/16418547/change-model-property-in-post-request-asp-net-mvc *@
			<input type="hidden" name="PostToken" value="@Model.PostToken"/>
        </div>
		<p>
			<input type="submit"  value="Activate" />
		</p>
    </fieldset>
}
<script type="text/javascript">
	$('form').submit(function () {
		if($(this).valid())
			$(this).find(':submit').attr('disabled', 'disabled');
	});
</script>
<Window x:Class="DemoApp.Activation.ActivationDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:DemoApp" 
        xmlns:activation="clr-namespace:DemoApp.Activation" 
        xmlns:presentation="clr-namespace:System.Windows.Controls;assembly=PresentationFramework"
        Closing="ActivationDialog_OnClosing"
        Title="Activation" Height="300" Width="300">
    <Window.InputBindings>
        <KeyBinding Key="Escape" Command="{x:Static local:CloseWindowCommand.Instance}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" />
    </Window.InputBindings>
    <Grid>
        <StackPanel Name="activationPanel" Orientation="Vertical" >
            <StackPanel.Resources>
                <ObjectDataProvider x:Key="activationData" ObjectType="{x:Type activation:ActivationModel}" />
                <activation:InverseBooleanConverter x:Key="inverseBooleanConverter" />
                <presentation:BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
            </StackPanel.Resources>
            <StackPanel.DataContext>
                <Binding Source="{StaticResource ResourceKey=activationData}"/>
            </StackPanel.DataContext>
            <StackPanel.CommandBindings>
                <CommandBinding Command="{x:Static activation:ActivationDialog.ActivationCommand}" CanExecute="ActivationCommand_CanExecute" Executed="ActivationCommand_Executed" />
            </StackPanel.CommandBindings>
            <TextBlock Text="Please enter you activation key:" Margin="0 5" />
            <TextBox Name="activationTextBox" MaxLength="{Binding ActivationKeyRequiredLength}" HorizontalAlignment="Left" Width="250" Margin="0 5" Text="{Binding Path=ActivationKey, Mode=TwoWay,
				UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" 
                IsEnabled="{Binding Path=IsActivationInProgress,Mode=OneWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource inverseBooleanConverter}}" >
                <TextBox.Style>
                    <Style TargetType="{x:Type TextBox}">
                        <Setter Property="Validation.ErrorTemplate">
                            <Setter.Value>
                                <ControlTemplate>
                                    <DockPanel LastChildFill="True">
                                        <Border Background="Red" DockPanel.Dock="Right" Margin="5 0" Width="20" Height="20" CornerRadius="10">
                                            <TextBlock Text="!" VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Bold" Foreground="White" />
                                        </Border>
                                        <AdornedElementPlaceholder VerticalAlignment="Center">
                                            <Border BorderBrush="Red" BorderThickness="1" />
                                        </AdornedElementPlaceholder>
                                    </DockPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="true">
                                <Setter Property="ToolTip"  Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>
            <StackPanel Orientation="Vertical">
                <Button Name="activationButton" Content="Activate"  Height="30" HorizontalAlignment="Left"  ToolTip="Activate online"
						Command="{x:Static activation:ActivationDialog.ActivationCommand}" CommandParameter="{Binding}">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="IsEnabled" Value="false" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ElementName=activationTextBox, Path=(Validation.HasError)}" Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="true" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Label Style="{StaticResource BusyAnimationStyle}" Visibility="{Binding Path=IsActivationInProgress,Mode=OneWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource booleanToVisibilityConverter}}"/>
            </StackPanel>
        </StackPanel>
    </Grid>
</Window>
